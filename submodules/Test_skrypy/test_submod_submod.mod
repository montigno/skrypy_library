[diagram]
link=[N6] node=[C4:transform#Node#M0:transform]
link=[N5] node=[C3:interpolator#Node#M0:interpolator]
link=[N4] node=[C2:matrix_moved_name#Node#M0:matrix_moved_name]
link=[N3] node=[C1:output_moved_name#Node#M0:output_moved_name]
link=[N2] node=[C0:image_fixed#Node#M0:image_fixed]
link=[N0] node=[U0:outPath#Node#M0:images_apply_transform]
link=[N1] node=[U0:listPath#Node#M0:images_transformed_name]
connt=[C4] name=[transform] type=[in] format=[enumerate_str] valOut=[enumerate(('Translation','Rigid','Similarity','QuickRigid','DenseRigid','BOLDRigid','Affine','AffineFast','BOLDAffine','TRSAA','ElasticSyN','SyN','SyNRA','SyNOnly','SyNCC','SyNabp','SyNBold','SyNBoldAff','SyNAggro','TVMSQ','TVMSQC'))] RectF=[(-450.0, 225.0, 70, 24)] 
connt=[C3] name=[interpolator] type=[in] format=[enumerate_str] valOut=[enumerate(('linear','nearestNeighbor','multiLabel','genericlabel','gaussian','bSpline','cosineWindowedSinc','welchWindowedSinc','hammingWindowedSinc','lanczosWindowedSinc'))] RectF=[(-450.0, 150.0, 70, 24)] 
connt=[C2] name=[matrix_moved_name] type=[in] format=[path] valOut=[path] RectF=[(-450.0, 50.0, 70, 24)] 
connt=[C1] name=[output_moved_name] type=[in] format=[path] valOut=[path] RectF=[(-450.0, -25.0, 70, 24)] 
connt=[C0] name=[image_fixed] type=[in] format=[path] valOut=[path] RectF=[(-450.0, -100.0, 70, 24)] 
block=[U0] category=[Demos.Models] class=[AllTypes] valInputs=[(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], [0, 0.0, '', True, 'path', [0], [0.0], [''], [False], ['path'], [[0]], [[0.0]], [['']], [[False]], [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])] RectF=[(-350.0, 250.0, 200.0, 375.0)] 
submod=[M0] nameMod=[bug_submod] catMod=[Test_skrypy] valInputs=[(['image_fixed', 'output_moved_name', 'matrix_moved_name', 'images_apply_transform', 'images_transformed_name', 'interpolator', 'transform'], ['Node(N2)', 'Node(N3)', 'Node(N4)', 'Node(N0)', 'Node(N1)', 'Node(N5)', 'Node(N6)'], [], [])] RectF=[(-50.0, 0.0, 225.0, 175.0)] 
[execution]
['C0:image_fixed=', 'C1:output_moved_name=', 'C2:matrix_moved_name=', 'C3:interpolator=', 'C4:transform=']
['U0', 'M0']
{'U0': ('Demos.Models', 'AllTypes', "(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], [0, 0.0, '', True, 'path', [0], [0.0], [''], [False], ['path'], [[0]], [[0.0]], [['']], [[False]], [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])")}
['U0:outPath', 'U0:listPath']
{'M0': ('bug_submod', 'Test_skrypy', "(['image_fixed', 'output_moved_name', 'matrix_moved_name', 'images_apply_transform', 'images_transformed_name', 'interpolator', 'transform'], ['C0:image_fixed', 'C1:output_moved_name', 'C2:matrix_moved_name', 'U0:outPath', 'U0:listPath', 'C3:interpolator', 'C4:transform'], [], [])")}
[]
[submod M0]
['C0:image_fixed=C0:image_fixed', 'C1:output_moved_name=C1:output_moved_name', 'C2:matrix_moved_name=C2:matrix_moved_name', 'C3:images_apply_transform=U0:outPathU0:outPath', 'C4:images_transformed_name=U0:listPath', 'C5:interpolator=C3:interpolator', 'C6:transform=']
['U1', 'U0']
{'U1': ('Demos.Models', 'AllTypes', "(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], [0, 0.0, '', True, 'path', [0], [0.0], [''], [False], ['path'], [[0]], [[0.0]], [['']], [[False]], [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])"), 'U0': ('MRImaging.Irmage', 'Non_linear_registration_multiple_images', "(['image_fixed', 'image_moved', 'output_moved_name', 'matrix_moved_name', 'images_apply_transform', 'images_transformed_name', 'interpolator', 'transform'], ['C0:image_fixed', 'U1:outPath', 'C1:output_moved_name', 'C2:matrix_moved_name', 'C3:images_apply_transform', 'C4:images_transformed_name', 'C5:interpolator', 'C6:transform'], ['out_image_registred', 'out_image_transformed', 'out_matrix_file'], ['path', 'list_path', 'path'])")}
['U1:outPath']
{}
[]
[interlinks]
[]
