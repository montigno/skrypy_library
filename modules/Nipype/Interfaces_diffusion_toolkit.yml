dti_DTIRecon:
  args: '' # (a string) Additional parameters to the command argument: ``%s``
  b0_threshold: 0.0 # (a float) Program will use b0 image with the given threshold to mask out high background of fa/adc maps. by default it will calculate threshold automatically. but if it failed, you need to set it manually. argument: ``-b0_th``
  environ: {} # (a dictionary with keys which are a bytes or None or a value of class ‘str’ and with values which are a bytes or None or a value of class ‘str’) – Environment variables. (Nipype default value: {})
  image_orientation_vectors: 0.0 # (a list of from 6 to 6 items which are a float) Specify image orientation vectors. if just one argument given, will treat it as filename and read the orientation vectors from the file. If 6 arguments are given, will treat them as 6 float numbers and construct the 1st and 2nd vector and calculate the 3rd one automatically. This information will be used to determine image orientation, as well as to adjust gradient vectors with oblique angle when. argument: ``-iop %f``
  n_averages: 0 # (an integer) Number of averages argument: ``-nex %s``
  oblique_correction: True # (a boolean) When oblique angle(s) applied, some SIEMENS DTI protocols do not adjust gradient accordingly, thus it requires adjustment for correct diffusion tensor calculation argument: ``-oc``
  out_prefix: '' # (a string, nipype default value: dti) Output file prefix argument: ``%s``, position: 2
  output_type: enumerate(('nii','analyze','ni1','nii.gz')) # ('nii' or 'analyze' or 'ni1' or 'nii.gz', nipype default value: nii) output file type argument: ``-ot %s``
